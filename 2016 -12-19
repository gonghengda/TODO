例一：
this.state{
  fileList:[]
}
...

fileList.push({
        uid: -(num),      //文件唯一标示，设置为负数，防止和内部产生的ID 冲突
        name:dt.name,     //文件名
        status: 'done',   //状态: 4种  uploading  done   error   removed
        url:item,
      })
...

<Upload {...uploadProps} disabled={uploadButton} fileList={this.state.fileList}>   >>>>fileList 是显示图片属性
          <div>
             <Icon type="plus" />
             <div className="ant-upload-text"><p>上传图片</p></div>
          </div>
</Upload>

例二：
class PicturesWall extends React.Component {
  state = {
    previewVisible: false,
    previewImage: '',
    fileList: [{
      uid: -1,
      name: 'xxx.png',
      status: 'done',
      url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',
    }],
  };

  handleCancel = () => this.setState({ previewVisible: false })

  handlePreview = (file) => {
    this.setState({
      previewImage: file.url || file.thumbUrl,
      previewVisible: true,
    });
  }

  handleChange = ({ fileList }) => this.setState({ fileList })   --》这里选择好图片进行显示图片
  render() {
    const { previewVisible, previewImage, fileList } = this.state;
    const uploadButton = (
      <div>
        <Icon type="plus" />
        <div className="ant-upload-text">Upload</div>
      </div>
    );
    return (
      <div className="clearfix">
        <Upload
          action="/upload.do"
          listType="picture-card"
          fileList={fileList}
          onPreview={this.handlePreview}
          onChange={this.handleChange}
        >
          {fileList.length >= 3 ? null : uploadButton}
        </Upload>
        <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>
          <img alt="example" style={{ width: '100%' }} src={previewImage} />
        </Modal>
      </div>
    );
  }
}
